# -*- coding: utf-8 -*-
"""matrix.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_iK3_VFr4M7ePtltvHMi_EPn7O6ZA2In
"""

# Given a 2D list (matrix), write a function to transpose the matrix (swap rows with columns).

# Define a function that accepts a 2D list (matrix) as a parameter.
def old_list(matrix):

# Determine the number of rows and columns in the original matrix.
  num_rows = len(matrix)
  num_columns = len(matrix[0])

# Create a new matrix with the dimensions swapped (rows become columns and columns become rows).
  new_matrix = [[0 for _ in range(num_rows)] for _ in range(num_columns)]

# Use nested loops to iterate over the rows and columns of the original matrix.
  for i in range(num_rows):
    for j in range(num_columns):

# Assign the elements from the original matrix to the new matrix in a transposed manner.
      new_matrix[j][i] = matrix[i][j]

# Return the new transposed matrix.
  return new_matrix

original = [
    [1,2,3],
    [4,5,6]
]

result = old_list(original)
print(result)

