# -*- coding: utf-8 -*-
"""Reversed_Iterator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SPcjEgZlvVXd3U-UDbt4dB6TAszvhoN2
"""

# Implement an iterator that iterates over a list in reverse order.

#Create a class called `ReversedIterator`.
class ReversedIterator():

#Define an `__init__` method to initialize the list and the current index.
     def __init__(self, data_list):
      self.data_list = data_list
      self.current_index = len(data_list) - 1 # Start from the last index.

#Implement the `__iter__` method to return the iterator object itself.
     def __iter__(self):
      return self # Return self

#Implement the `__next__` method to return the current item and decrement the index.
     def __next__(self):
      if self.current_index < 0:
        raise StopIteration
      value = self.data_list[self.current_index]
      self.current_index -= 1
      return value

#Create an instance of `ReversedIterator` with a specific list.
x = ReversedIterator([12,22,8,52,45,98,18])

#Use a `for` loop or the `next()` function to iterate through the reversed list.
for reverse in x:
  print(reverse)

