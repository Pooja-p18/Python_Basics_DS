# -*- coding: utf-8 -*-
"""Banking_system.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XQXGrxCU7pRoNrptHx-DNpJR3TP2aAT4
"""

# Implement a simple banking system with classes for accounts and transactions.
from datetime import datetime
import uuid

# Define a `BankAccount` Class
class BankAccount:
  def __init__(self, account_number, account_holder, balance=0):
    self.account_number = account_number
    self.account_holder = account_holder
    self.balance = balance
    self.transactions = []

  def deposit(self, amount):
    """Deposit money into the account."""
    if amount > 0:
      self.balance += amount
      transaction = Transaction(self, amount, "deposit", datetime.now())
      self.transactions.append(transaction)
      print(f"Deposited {amount:.2f}. New balance is ₹{self.balance:.2f}")
    else:
      print("Deposit amount must be positive.")

  def withdraw(self, amount):
    """Withdraw money from the account."""
    if 0 < amount <= self.balance:
      self.balance -= amount
      transaction = Transaction(self, amount, "withdraw", datetime.now())
      self.transactions.append(transaction)
      print(f"Withdrew {amount:.2f}. New balance is ₹{self.balance:.2f}")
    else:
      print(f"Insufficient balance. Current balance is ₹{self.balance:.2f}")

  def display_balance(self):
    """Display the current balance."""
    print(f"Account {self.account_number} | Holder: {self.account_holder} | Balance: ₹{self.balance:.2f}")

  def display_transaction_history(self):
    """Display the transaction history."""
    print(f"\nTransaction history for account {self.account_number}:")
    if self.transactions:
      for transaction in self.transactions:
        transaction.display()
    else:
      print("No transactions yet.")


class Transaction:
  def __init__(self, account, amount, type, date):
    self.transaction_id = str(uuid.uuid4())[:8]
    self.account = account
    self.amount = amount
    self.type = type
    self.date = date

  def display(self):
    """Display transaction details."""
    print(f"ID: {self.transaction_id} | {self.type.title()} of ₹{self.amount:.2f} on {self.date.strftime('%Y-%m-%d %H:%M:%S')}")

# Create Bank Accounts
acc1 = BankAccount("1001", "Steve", 1000)
acc2 = BankAccount("1002", "Monalisa", 500)

# Perform some transactions
acc1.deposit(5000)
acc1.withdraw(1500)
acc1.deposit(3000)

acc2.deposit(10000)
acc2.withdraw(5000)
acc2.withdraw(6000)  # This will fail (insufficient balance)

# Display balances
print("\nAccount Balances:")
acc1.display_balance()
acc2.display_balance()

# Display transaction histories
acc1.display_transaction_history()
acc2.display_transaction_history()

